// 天融信上网行为管理系统
botu("ACM/Topsec/TopACM[3.0.0216p1]/Syslog") {
	if (patternParse(MS_SRC_DATA, "(Alarm: )?(?<detail>.*)")) {
	    nCat = "/Violation";
        patternSplitParse(detail, "; ", "=");
        patternParse(Source, "(?<src>[^:]+):(?<sport>[^:]+)");
        patternParse(Dest, "(?<dst>[^:]+):(?<dport>[^:]+)");
        patternParse(Trans, "(?<trans>[^:]+):(?<tport>[^:]+)");
	    switch(Type) {
            case "URL":
                pack("event") {
                    START_TIME = format2Time(Time, "yyyy-MM-dd HH:mm:ss");
                    EVT_CATEGORY = Type;
                    N_EVT_CATEGORY = nCat;
                    N_SEVERITY = 1;
                    SBJ_TYPE = "/User";
                    SBJ_NAME = Username;
                    SBJ_IP = src;
                    SBJ_PORT = sport;
                    BHV_CATEGORY = "/Access";
                    APP_PROTO = "HTTP";
                    OBJ_TYPE = "/Service/Web";
                    OBJ_NAME = Host;
                    OBJ_IP = dst;
                    OBJ_PORT = dport;
                    REQ_URL = URL;
                }
            case "Web Search Engine":
                pack("event") {
                    START_TIME = format2Time(Time, "yyyy-MM-dd HH:mm:ss");
                    EVT_CATEGORY = Type;
                    N_EVT_CATEGORY = nCat;
                    N_SEVERITY = 1;
                    SBJ_TYPE = "/User";
                    SBJ_NAME = Username;
                    SBJ_IP = src;
                    SBJ_PORT = sport;
                    BHV_CATEGORY = "/Access";
                    OBJ_TYPE = "/Ip";
                    OBJ_NAME = dst;
                    OBJ_IP = dst;
                    OBJ_PORT = dport;
                    OBJ_HOST =  field("Show Name");
                    REQ_URL = URL;
                }
            case "Web BBS":
                pack("event") {
                    START_TIME = format2Time(Time, "yyyy-MM-dd HH:mm:ss");
                    DS_PROCESS_NAME = Type;
                    EVT_CATEGORY =  field("Keyword Name");
                    EVT_TYPE =  field("Keyword Content");
                    SEVERITY = Level;
                    N_EVT_CATEGORY = nCat;
                    N_SEVERITY = dictMapping("severity",Level);
                    SBJ_HOST = Host;
                    BEHAVIOR = Subject;
                    BHV_BODY = Content;
                    OBJ_TYPE = "/User";
                    OBJ_NAME = Username;
                    OBJ_HOST =  field("Show Name");
                    REQ_URL = URL;
                }
            case "Http Upload File":
                pack("event") {
                    START_TIME = format2Time(Time, "yyyy-MM-dd HH:mm:ss");
                    EVT_CATEGORY = Type;
                    EVT_TYPE =  field("File Type Content");
                    N_EVT_CATEGORY = nCat;
                    N_SEVERITY = 1;
                    SBJ_TYPE = "/User";
                    SBJ_NAME = Username;
                    SBJ_IP = src;
                    SBJ_PORT = sport;
                    BHV_CATEGORY = "/Upload";
                    OBJ_TYPE = "/Service/Web";
                    OBJ_NAME = Host;
                    OBJ_HOST = Host;
                    OBJ_IP =  dst;
                    OBJ_PORT = dport;
                    REQ_URL = URL;
                    PLD_TYPE = "/Resource/File";
                    PLD_NAME =  field("File Name");
                }
            case "Http Content Filter":
                pack("event") {
                    START_TIME = format2Time(Time, "yyyy-MM-dd HH:mm:ss");
                    DS_PROCESS_NAME = Type;
                    EVT_CATEGORY =  field("Keyword Name");
                    EVT_TYPE =  field("Keyword Content");
                    SEVERITY = Level;
                    N_EVT_CATEGORY = nCat;
                    N_SEVERITY = dictMapping("severity",Level);
                    SBJ_HOST = Host;
                    BEHAVIOR = Subject;
                    BHV_BODY = Content;
                    OBJ_TYPE = "/User";
                    OBJ_NAME = Username;
                    OBJ_HOST =  field("Show Name");
                    REQ_URL = URL;
                }
            case "Web POST":
                pack("event") {
                    START_TIME = format2Time(Time, "yyyy-MM-dd HH:mm:ss");
                    DS_PROCESS_NAME = Type;
                    EVT_CATEGORY =  field("Keyword Name");
                    EVT_TYPE =  field("Keyword Content");
                    SEVERITY = Level;
                    N_EVT_CATEGORY = nCat;
                    N_SEVERITY = dictMapping("severity",Level);
                    SBJ_HOST = Host;
                    BEHAVIOR = Subject;
                    BHV_BODY = Content;
                    OBJ_TYPE = "/User";
                    OBJ_NAME = Username;
                    OBJ_HOST =  field("Show Name");
                    REQ_URL = URL;
                }
            case "IM":
                pack("event") {
                    START_TIME = format2Time(Time, "yyyy-MM-dd HH:mm:ss");
                    DS_PROCESS_NAME = Type;
                    EVT_CATEGORY =  field("Keyword Name");
                    EVT_TYPE =  field("Keyword Content");
                    EVT_ID = field("IM ID");
                    SEVERITY = Level;
                    N_EVT_CATEGORY = nCat;
                    N_SEVERITY = dictMapping("severity",Level);
                    SBJ_HOST = Host;
                    SBJ_ROLE = From;
                    BEHAVIOR = Subject;
                    BHV_BODY = Content;
                    OBJ_TYPE = "/User";
                    OBJ_NAME = Username;
                    OBJ_HOST =  field("Show Name");
                    OBJ_ROLE = To;
                }
            case "Ftp Upload File":
                pack("event") {
                    START_TIME = format2Time(Time, "yyyy-MM-dd HH:mm:ss");
                    DS_PROCESS_NAME = Type;
                    EVT_CATEGORY =  field("File Type Name");
                    EVT_TYPE =  field("File Type Content");
                    SEVERITY = Level;
                    N_EVT_CATEGORY = nCat;
                    N_SEVERITY = dictMapping("severity",Level);
                    SBJ_HOST = Host;
                    BEHAVIOR = Subject;
                    BHV_BODY = Content;
                    OBJ_TYPE = "/User";
                    OBJ_NAME = Username;
                    OBJ_HOST =  field("Show Name");
                    EVIDENCE =  field("File Name");
                }
            case "WEBTITLE":
                pack("event") {
                    START_TIME = format2Time(Time, "yyyy-MM-dd HH:mm:ss");
                    EVT_CATEGORY = Type;
                    EVT_NAME = title;
                    N_EVT_CATEGORY = nCat;
                    N_SEVERITY = 1;
                    SBJ_TYPE = "/Ip";
                    SBJ_IP = src;
                    SBJ_PORT = sport;
                    BHV_CATEGORY = "/Access";
                    OBJ_TYPE = "/Service/Web";
                    OBJ_NAME = Host;
                    OBJ_HOST = Host;
                    OBJ_IP = dst;
                    OBJ_PORT = dport;
                    REQ_URL = URL;
                }
            case "Login":
                pack("event") {
                    START_TIME = format2Time(Time, "yyyy-MM-dd HH:mm:ss");
                    EVT_CATEGORY = Type;
                    N_EVT_CATEGORY = nCat;
                    N_SEVERITY = 1;
                    SBJ_TYPE = "/Resource/Accout";
                    SBJ_NAME = Account;
                    SBJ_ROLE = Username;
                    SBJ_IP = src;
                    SBJ_PORT = sport;
                    BHV_CATEGORY = "/Login";
                    OBJ_TYPE = "/Ip";
                    OBJ_NAME = dst;
                    OBJ_IP = dst;
                    OBJ_PORT = dport;
                }
            case "SESSION":
                pack("event") {
                    START_TIME = format2Time(Time, "yyyy-MM-dd HH:mm:ss");
                    EVT_CATEGORY = Type;
                    DURATION = Duration;
                    N_EVT_CATEGORY = nCat;
                    N_SEVERITY = 1;
                    SBJ_TYPE = "/Ip";
                    SBJ_NAME = src;
                    SBJ_IP = src;
                    SBJ_PORT = sport;
                    SBJ_MAC = convert2Mac(Mac);
                    TRANS_PROTO = dictMapping("trans_protocol", Protocol);
                    APP_PROTO = Sevice;
                    OBJ_TYPE = "/Ip";
                    OBJ_NAME = dst;
                    OBJ_IP = dst;
                    OBJ_PORT = dport;
                    BYTES_IN = Byte_sent;
                    BYTES_OUT = Byte_recve;
                }
            case "AuthLog":
                pack("event") {
                    START_TIME = format2Time(Time, "yyyy-MM-dd HH:mm:ss");
                    EVT_CATEGORY = Type;
                    EVT_CATEGORY = Reason;
                    EVT_TYPE = Server;
                    SEVERITY = Level;
                    N_SEVERITY = dictMapping("severity",Level);
                    SBJ_IP = Sip;
                    SBJ_MAC = convert2Mac(Mac);
                    OBJ_TYPE = "/User";
                    OBJ_NAME = field("User Name");
                    OBJ_HOST =  field("Show Name");
                    STATUS = Result;
                    BYTES_IN = Send_bytes;
                    BYTES_OUT = Recv_bytes;
                }
            case "Ftp Upload":
                pack("event") {
                    START_TIME = format2Time(Time, "yyyy-MM-dd HH:mm:ss");
                    EVT_CATEGORY = Type;
                    SEVERITY = Level;
                    N_SEVERITY = dictMapping("severity",Level);
                    OBJ_TYPE = "/User";
                    OBJ_NAME = Username;
                    OBJ_HOST =  field("Show Name");
                    EVIDENCE =  field("File Name");
                }
            case "Mail":
                pack("event") {
                    START_TIME = format2Time(Time, "yyyy-MM-dd HH:mm:ss");
                    EVT_CATEGORY = Type;
                    SEVERITY = Level;
                    N_SEVERITY = dictMapping("severity",Level);
                    SBJ_NAME = Account;
                    SBJ_ROLE = From;
                    BEHAVIOR = Subject;
                    BHV_BODY = Content;
                    OBJ_TYPE = "/User";
                    OBJ_NAME = Username;
                    OBJ_HOST =  field("Show Name");
                    OBJ_ROLE = To;
                    SUBJECT = Subject;
                    ATTACHE = Attach;
                }
            case "Telnet":
                pack("event") {
                    START_TIME = format2Time(Time, "yyyy-MM-dd HH:mm:ss");
                    EVT_CATEGORY = Type;
                    SEVERITY = Level;
                    N_SEVERITY = dictMapping("severity",Level);
                    SBJ_IP = src;
                    SBJ_PORT = sport;
                    BHV_BODY = strFormat("Name:%s,Password:%s",Name,Password);
                    OBJ_IP = dst;
                    OBJ_PORT = dport;
                    OBJ_TYPE = "/User";
                    OBJ_NAME = Username;
                    OBJ_HOST =  field("Show Name");
                    STATUS = Result;
                }
            case "Behavior drop":
                pack("event") {
                    START_TIME = format2Time(Time, "yyyy-MM-dd HH:mm:ss");
                    EVT_CATEGORY = Type;
                    EVT_TYPE =  field("Rule Name");
                    SEVERITY = Level;
                    N_SEVERITY = dictMapping("severity",Level);
                    SBJ_IP = src;
                    SBJ_PORT = sport;
                    BHV_BODY = Translate;
                    OBJ_IP = dst;
                    OBJ_PORT = dport;
                    OBJ_TYPE = "/User";
                    OBJ_NAME = Username;
                    OBJ_HOST =  field("Show Name");
                }
            case "FC drop":
                pack("event") {
                    START_TIME = format2Time(Time, "yyyy-MM-dd HH:mm:ss");
                    EVT_CATEGORY = Type;
                    EVT_TYPE =  field("Rule Name");
                    SEVERITY = Level;
                    N_SEVERITY = dictMapping("severity",Level);
                    SBJ_IP = src;
                    SBJ_PORT = sport;
                    BHV_BODY = Translate;
                    OBJ_IP = dst;
                    OBJ_PORT = dport;
                    OBJ_TYPE = "/User";
                    OBJ_NAME = Username;
                    OBJ_HOST =  field("Show Name");
                }
            case "Firewall drop":
                pack("event") {
                    START_TIME = format2Time(Time, "yyyy-MM-dd HH:mm:ss");
                    EVT_CATEGORY = Type;
                    EVT_TYPE =  field("Rule Name");
                    SEVERITY = Level;
                    N_SEVERITY = dictMapping("severity",Level);
                    SBJ_IP = src;
                    SBJ_PORT = sport;
                    BHV_BODY = Translate;
                    OBJ_IP = dst;
                    OBJ_PORT = dport;
                    OBJ_TYPE = "/User";
                    OBJ_NAME = Username;
                    OBJ_HOST =  field("Show Name");
                }
        	default:
	            if(Type == "Webmail From Address" || Type == "Webmail To Address" || Type == "Webmail Subject" || Type == "Webmail Content" || Type == "SMTP From Address" || Type == "SMTP To Address" || Type == "SMTP Subject" || Type == "SMTP Content" || Type == "SMTP Attach" || Type == "syslog_type"){
	                pack("event") {
	                    START_TIME = format2Time(Time, "yyyy-MM-dd HH:mm:ss");
	                    EVT_CATEGORY = Type;
	                    SEVERITY = Level;
	                    N_SEVERITY = dictMapping("severity",Level);
	                    SBJ_TYPE = "/User";
	                    SBJ_NAME = Account;
	                    SBJ_ROLE = From;
	                    BEHAVIOR = Subject;
	                    BHV_BODY = Content;
                        OBJ_TYPE = "/User";
	                    OBJ_NAME = Username;
	                    OBJ_HOST = field("Show Name");
	                    OBJ_ROLE = To;
	                    SUBJECT = Subject;
	                    ATTACHE = Attach;
	                }
                }else{
	                pack(){}
                }

        }
    }
}