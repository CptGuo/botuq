// 飞塔防火墙
botu("Firewall/Fotinet/Firewall/Syslog") {
    patternParse(MS_SRC_DATA, "^\\<(?<pri>\\d+)\\>(?<detail>.*)");
    sev = parseSyslogSeverity(pri);
    splitParse(detail, ' ', '"', '"', "=");
    time = strFormat("%s %s", date, time);
    if (type == "utm") {
        if(subtype == "dlp") {
            pack("event") {
                 START_TIME = format2Time(time,"yyyy-MM-dd HH:mm:ss");
                 DS_DVC_NAME = devname;
                 EVT_CATEGORY = strFormat("%s/%s", type,subtype);
                 EVT_TYPE = eventtype;
                 EVT_ID = logid;
                 SEVERITY = severity;
                 N_EVT_CATEGORY = "/Audit";
                 N_SEVERITY = dictMapping("severity",severity);
                 SBJ_TYPE = "/Ip";
                 SBJ_NAME = srcip;
                 SBJ_IP = srcip;
                 SBJ_PORT = srcport;
                 SBJ_INTERFACE = srcintf;
                 BHV_CATEGORY = "/Access";
                 BEHAVIOR = "access";
                 TRANS_PROTO = dictMapping("trans_protocol",toInt(proto));
                 APP_PROTO = service;
                 OBJ_TYPE = "/Host";
                 OBJ_NAME = hostname;
                 OBJ_IP = dstip;
                 OBJ_PORT = dstport;
                 OBJ_INTERFACE = dstintf;
                 PRT_ACTION = action;
                 REQ_URL = url;
                 REQ_USER_AGENT = agent;
                 PLD_TYPE = "/Resource/File";
                 PLD_NAME = filename;
                 PLD_EXT_NAME = filetype;
                 PLD_SIZE = filesize;
                 BYTES_IN = rcvdbyte;
                 BYTES_OUT = sentbyte;
            }
        } else if (subtype=="app-ctrl") {
            pack("event") {
                 START_TIME = format2Time(time,"yyyy-MM-dd HH:mm:ss");
                 DS_DVC_NAME = devname;
                 EVT_CATEGORY = strFormat("%s/%s/%s/%s", type,subtype,appcat,app);
                 EVT_TYPE = eventtype;
                 EVT_ID = logid;
                 SEVERITY = apprisk;
                 N_EVT_CATEGORY = "/Audit";
                 N_SEVERITY = dictMapping("severity",severity);
                 SBJ_TYPE = "/Ip";
                 SBJ_NAME = srcip;
                 SBJ_IP = srcip;
                 SBJ_PORT = srcport;
                 SBJ_INTERFACE = srcintf;
                 BHV_CATEGORY = "/Access";
                 BEHAVIOR = "access";
                 TRANS_PROTO = dictMapping("trans_protocol",toInt(proto));
                 APP_PROTO = service;
                 OBJ_TYPE = "/Host";
                 OBJ_NAME = hostname;
                 OBJ_IP = dstip;
                 OBJ_PORT = dstport;
                 OBJ_INTERFACE = dstintf;
                 PRT_ACTION = action;
                 OUTCOME = msg;
                 REQ_URL = url;
            }
        } else if (subtype=="webfilter") {
            pack("event") {
                 START_TIME = format2Time(time,"yyyy-MM-dd HH:mm:ss");
                 DS_DVC_NAME = devname;
                 EVT_CATEGORY = strFormat("%s/%s/%s/%s", type,subtype,appcat,app);
                 EVT_TYPE = eventtype;
                 EVT_ID = logid;
                 SEVERITY = level;
                 N_EVT_CATEGORY = "/Audit";
                 N_SEVERITY = dictMapping("severity",level);
                 SBJ_TYPE = "/Ip";
                 SBJ_NAME = srcip;
                 SBJ_IP = srcip;
                 SBJ_PORT = srcport;
                 SBJ_INTERFACE = srcintf;
                 BHV_CATEGORY = "/Access";
                 BEHAVIOR = "access";
                 TRANS_PROTO = dictMapping("trans_protocol",toInt(proto));
                 APP_PROTO = service;
                 OBJ_TYPE = "/Host";
                 OBJ_NAME = hostname;
                 OBJ_IP = dstip;
                 OBJ_PORT = dstport;
                 OBJ_INTERFACE = dstintf;
                 PRT_ACTION = action;
                 OUTCOME = msg;
                 REQ_URL = url;
                 BYTES_IN = rcvdbyte;
                 BYTES_OUT = sentbyte;
            }
        }
    } else if (type=="traffic") {
        if (subtype=="forward") {
            pack("event") {
                 START_TIME = format2Time(time,"yyyy-MM-dd HH:mm:ss");
                 DS_DVC_NAME = devname;
                 DURATION = duration;
                 EVT_CATEGORY = strFormat("%s/%s/%s/%s", type,subtype,appcat,app);
                 EVT_TYPE = eventtype;
                 EVT_ID = logid;
                 SEVERITY = severity;
                 N_EVT_CATEGORY = "/Audit/Flow";
                 N_SEVERITY = dictMapping("severity",severity);
                 SBJ_TYPE = "/Ip";
                 SBJ_NAME = srcip;
                 SBJ_IP = srcip;
                 SBJ_PORT = srcport;
                 SBJ_INTERFACE = srcintf;
                 BHV_CATEGORY = "/Access";
                 BEHAVIOR = "access";
                 TRANS_PROTO = dictMapping("trans_protocol",toInt(proto));
                 APP_PROTO = service;
                 OBJ_TYPE = "/Host";
                 OBJ_NAME = hostname;
                 OBJ_IP = dstip;
                 OBJ_PORT = dstport;
                 OBJ_TRANS_IP = tranip;
                 OBJ_TRANS_PORT = tranport;
                 OBJ_INTERFACE = dstintf;
                 PRT_ACTION = utmaction;
                 PACKETS_IN = rcvdpkt;
                 PACKETS_OUT = sentpkt;
                 BYTES_IN = rcvdbyte;
                 BYTES_OUT = sentbyte;
            }
        } else if (subtype == "local") {
            pack("event") {
                 START_TIME = format2Time(time,"yyyy-MM-dd HH:mm:ss");
                 DS_DVC_NAME = devname;
                 DURATION = duration;
                 EVT_CATEGORY = strFormat("%s/%s/%s/%s", type,subtype,appcat,app);
                 EVT_TYPE = eventtype;
                 EVT_ID = logid;
                 SEVERITY = severity;
                 N_EVT_CATEGORY = "/Audit";
                 N_SEVERITY = dictMapping("severity",severity);
                 SBJ_TYPE = "/Ip";
                 SBJ_NAME = srcip;
                 SBJ_IP = srcip;
                 SBJ_PORT = srcport;
                 SBJ_INTERFACE = srcintf;
                 BHV_CATEGORY = "/Access";
                 BEHAVIOR = "access";
                 TRANS_PROTO = dictMapping("trans_protocol",toInt(proto));
                 APP_PROTO = service;
                 OBJ_TYPE = "/Host";
                 OBJ_NAME = hostname;
                 OBJ_IP = dstip;
                 OBJ_PORT = dstport;
                 OBJ_INTERFACE = dstintf;
                 PRT_ACTION = action;
                 PACKETS_IN = rcvdpkt;
                 PACKETS_OUT = sentpkt;
                 BYTES_IN = rcvdbyte;
                 BYTES_OUT = sentbyte;
            }
        }
    } else if (type == "event") {
        if (subtype == "vpn") {
            pack("event") {
                 START_TIME = format2Time(time,"yyyy-MM-dd HH:mm:ss");
                 DS_DVC_NAME = devname;
                 EVT_CATEGORY = strFormat("%s/%s", type,subtype);
                 EVT_TYPE = eventtype;
                 EVT_ID = logid;
                 SEVERITY = severity;
                 N_EVT_CATEGORY = "/Audit";
                 N_SEVERITY = dictMapping("severity",severity);
                 SBJ_TYPE = "/Ip";
                 SBJ_NAME = locip;
                 SBJ_IP = locip;
                 SBJ_PORT = locport;
                 SBJ_INTERFACE = outintf;
                 BHV_CATEGORY = "/Access";
                 BEHAVIOR = "access";
                 TRANS_PROTO = dictMapping("trans_protocol",toInt(proto));
                 APP_PROTO = vpntunnel;
                 OBJ_TYPE = "/Ip";
                 OBJ_NAME = remip;
                 OBJ_IP = remip;
                 OBJ_PORT = remport;
                 PRT_ACTION = action;
                 OUTCOME = msg;
                 REQ_COOKIE = cookies;
            }
        }
    }
}